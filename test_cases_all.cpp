std::vector<char*> RsaTestCases = {
  "TLS-RSA-WITH-AES-128-CBC-SHA",
  "TLS-RSA-WITH-AES-256-CBC-SHA",
  "TLS-RSA-WITH-AES-128-CBC-SHA256",
  "TLS-RSA-WITH-AES-256-CBC-SHA256",
  "TLS-RSA-WITH-AES-128-GCM-SHA256",
  "TLS-RSA-WITH-AES-256-GCM-SHA384",
  "TLS-RSA-WITH-AES-128-CCM",
  "TLS-RSA-WITH-AES-256-CCM",
  "TLS-RSA-WITH-AES-128-CCM-8",
  "TLS-RSA-WITH-AES-256-CCM-8",
  "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA",
  "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA",
  "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256",
  "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256",
  "TLS-RSA-WITH-CAMELLIA-128-GCM-SHA256",
  "TLS-RSA-WITH-CAMELLIA-256-GCM-SHA384",
  "TLS-RSA-WITH-3DES-EDE-CBC-SHA",
  "TLS-RSA-WITH-RC4-128-SHA",
  "TLS-RSA-WITH-RC4-128-MD5",
  "TLS-RSA-WITH-DES-CBC-SHA",
  "TLS-RSA-WITH-NULL-MD5",
  "TLS-RSA-WITH-NULL-SHA",
  "TLS-RSA-WITH-NULL-SHA256"
};

std::vector<char*> DheRsaTestCases = 
{
  "TLS-DHE-RSA-WITH-AES-128-CBC-SHA",
  "TLS-DHE-RSA-WITH-AES-256-CBC-SHA",
  "TLS-DHE-RSA-WITH-AES-128-CBC-SHA256",
  "TLS-DHE-RSA-WITH-AES-256-CBC-SHA256",
  "TLS-DHE-RSA-WITH-AES-128-GCM-SHA256",
  "TLS-DHE-RSA-WITH-AES-256-GCM-SHA384",
  "TLS-DHE-RSA-WITH-AES-128-CCM",
  "TLS-DHE-RSA-WITH-AES-256-CCM",
  "TLS-DHE-RSA-WITH-AES-128-CCM-8",
  "TLS-DHE-RSA-WITH-AES-256-CCM-8",
  "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA",
  "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA",
  "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256",
  "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256",
  "TLS-DHE-RSA-WITH-CAMELLIA-128-GCM-SHA256",
  "TLS-DHE-RSA-WITH-CAMELLIA-256-GCM-SHA256",
  "TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA",
  "TLS-DHE-RSA-WITH-DES-CBC-SHA"
};

std::vector<char*> EcdheRsaTestCases =
{
  "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA",
  "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA",
  "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256",
  "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384",
  "TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256",
  "TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384",
  "TLS-ECDHE-RSA-WITH-CAMELLIA-128-CBC-SHA256",
  "TLS-ECDHE-RSA-WITH-CAMELLIA-256-CBC-SHA384",
  "TLS-ECDHE-RSA-WITH-CAMELLIA-128-GCM-SHA256",
  "TLS-ECDHE-RSA-WITH-CAMELLIA-256-GCM-SHA384",
  "TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA",
  "TLS-ECDHE-RSA-WITH-RC4-128-SHA",
  "TLS-ECDHE-RSA-WITH-NULL-SHA"
};

std::vector<char*> EcdhRsaTestCases =
{
  "TLS-ECDH-RSA-WITH-AES-128-CBC-SHA",
  "TLS-ECDH-RSA-WITH-AES-256-CBC-SHA",
  "TLS-ECDH-RSA-WITH-AES-128-CBC-SHA256",
  "TLS-ECDH-RSA-WITH-AES-256-CBC-SHA384",
  "TLS-ECDH-RSA-WITH-AES-128-GCM-SHA256",
  "TLS-ECDH-RSA-WITH-AES-256-GCM-SHA384",
  "TLS-ECDH-RSA-WITH-CAMELLIA-128-CBC-SHA256",
  "TLS-ECDH-RSA-WITH-CAMELLIA-256-CBC-SHA384",
  "TLS-ECDH-RSA-WITH-CAMELLIA-128-GCM-SHA256",
  "TLS-ECDH-RSA-WITH-CAMELLIA-256-GCM-SHA384",
  "TLS-ECDH-RSA-WITH-3DES-EDE-CBC-SHA",
  "TLS-ECDH-RSA-WITH-RC4-128-SHA",
  "TLS-ECDH-RSA-WITH-NULL-SHA"
};

std::vector<char*> EcdheEcdsaTestCases =
{
  "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA",
  "TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA",
  "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256",
  "TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384",
  "TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256",
  "TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384",
  "TLS-ECDHE-ECDSA-WITH-AES-128-CCM",
  "TLS-ECDHE-ECDSA-WITH-AES-256-CCM",
  "TLS-ECDHE-ECDSA-WITH-AES-128-CCM-8",
  "TLS-ECDHE-ECDSA-WITH-AES-256-CCM-8",
  "TLS-ECDHE-ECDSA-WITH-CAMELLIA-128-CBC-SHA256",
  "TLS-ECDHE-ECDSA-WITH-CAMELLIA-256-CBC-SHA384",
  "TLS-ECDHE-ECDSA-WITH-CAMELLIA-128-GCM-SHA256",
  "TLS-ECDHE-ECDSA-WITH-CAMELLIA-256-GCM-SHA384",
  "TLS-ECDHE-ECDSA-WITH-3DES-EDE-CBC-SHA",
  "TLS-ECDHE-ECDSA-WITH-RC4-128-SHA",
  "TLS-ECDHE-ECDSA-WITH-NULL-SHA"
};

  std::vector<char*> EcdhEcdsaTestCases =
    {
      "TLS-ECDH-ECDSA-WITH-AES-128-CBC-SHA",
      "TLS-ECDH-ECDSA-WITH-AES-256-CBC-SHA",
      "TLS-ECDH-ECDSA-WITH-AES-128-CBC-SHA256",
      "TLS-ECDH-ECDSA-WITH-AES-256-CBC-SHA384",
      "TLS-ECDH-ECDSA-WITH-AES-128-GCM-SHA256",
      "TLS-ECDH-ECDSA-WITH-AES-256-GCM-SHA384",
      "TLS-ECDH-ECDSA-WITH-CAMELLIA-128-CBC-SHA256",
      "TLS-ECDH-ECDSA-WITH-CAMELLIA-256-CBC-SHA384",
      "TLS-ECDH-ECDSA-WITH-CAMELLIA-128-GCM-SHA256",
      "TLS-ECDH-ECDSA-WITH-CAMELLIA-256-GCM-SHA384",
      "TLS-ECDH-ECDSA-WITH-3DES-EDE-CBC-SHA",
      "TLS-ECDH-ECDSA-WITH-RC4-128-SHA",
      "TLS-ECDH-ECDSA-WITH-NULL-SHA"
    };

std::vector<char*> PskTestCases =
  {
    "TLS-PSK-WITH-RC4-128-SHA",
    "TLS-PSK-WITH-3DES-EDE-CBC-SHA",
    "TLS-PSK-WITH-AES-128-CBC-SHA",
    "TLS-PSK-WITH-AES-256-CBC-SHA",
    "TLS-PSK-WITH-AES-128-CBC-SHA256",
    "TLS-PSK-WITH-AES-256-CBC-SHA384",
    "TLS-PSK-WITH-AES-128-GCM-SHA256",
    "TLS-PSK-WITH-AES-256-GCM-SHA384",
    "TLS-PSK-WITH-AES-128-CCM",
    "TLS-PSK-WITH-AES-256-CCM",
    "TLS-PSK-WITH-AES-128-CCM-8",
    "TLS-PSK-WITH-AES-256-CCM-8",
    "TLS-PSK-WITH-CAMELLIA-128-CBC-SHA256",
    "TLS-PSK-WITH-CAMELLIA-256-CBC-SHA384",
    "TLS-PSK-WITH-CAMELLIA-128-GCM-SHA256",
    "TLS-PSK-WITH-CAMELLIA-256-GCM-SHA384",
    "TLS-PSK-WITH-NULL-SHA",
    "TLS-PSK-WITH-NULL-SHA256",
"TLS-PSK-WITH-NULL-SHA384"
  };

std::vector<char*> DhePskTestCases =
  {
    "TLS-DHE-PSK-WITH-RC4-128-SHA",
    "TLS-DHE-PSK-WITH-3DES-EDE-CBC-SHA",
    "TLS-DHE-PSK-WITH-AES-128-CBC-SHA",
    "TLS-DHE-PSK-WITH-AES-256-CBC-SHA",
    "TLS-DHE-PSK-WITH-AES-128-CBC-SHA256",
    "TLS-DHE-PSK-WITH-AES-256-CBC-SHA384",
    "TLS-DHE-PSK-WITH-AES-128-GCM-SHA256",
    "TLS-DHE-PSK-WITH-AES-256-GCM-SHA384",
    "TLS-DHE-PSK-WITH-AES-128-CCM",
    "TLS-DHE-PSK-WITH-AES-256-CCM",
    "TLS-DHE-PSK-WITH-AES-128-CCM-8",
    "TLS-DHE-PSK-WITH-AES-256-CCM-8",
    "TLS-DHE-PSK-WITH-CAMELLIA-128-CBC-SHA256",
    "TLS-DHE-PSK-WITH-CAMELLIA-256-CBC-SHA384",
    "TLS-DHE-PSK-WITH-CAMELLIA-128-GCM-SHA256",
    "TLS-DHE-PSK-WITH-CAMELLIA-256-GCM-SHA384",
    "TLS-DHE-PSK-WITH-NULL-SHA",
    "TLS-DHE-PSK-WITH-NULL-SHA256",
    "TLS-DHE-PSK-WITH-NULL-SHA384"
  };

  std::vector<char*> EcdhePskTestCases =
    {
      "TLS-ECDHE-PSK-WITH-AES-128-CBC-SHA",
      "TLS-ECDHE-PSK-WITH-AES-256-CBC-SHA",
      "TLS-ECDHE-PSK-WITH-AES-128-CBC-SHA256",
      "TLS-ECDHE-PSK-WITH-AES-256-CBC-SHA384",
      "TLS-ECDHE-PSK-WITH-CAMELLIA-128-CBC-SHA256",
      "TLS-ECDHE-PSK-WITH-CAMELLIA-256-CBC-SHA384",
      "TLS-ECDHE-PSK-WITH-3DES-EDE-CBC-SHA",
      "TLS-ECDHE-PSK-WITH-RC4-128-SHA",
      "TLS-ECDHE-PSK-WITH-NULL-SHA",
      "TLS-ECDHE-PSK-WITH-NULL-SHA256",
      "TLS-ECDHE-PSK-WITH-NULL-SHA384"
    };

    std::vector<char*> RsaPskTestCases =
      {
	"TLS-RSA-PSK-WITH-AES-128-CBC-SHA",
	"TLS-RSA-PSK-WITH-AES-256-CBC-SHA",
	"TLS-RSA-PSK-WITH-AES-128-GCM-SHA256",
	"TLS-RSA-PSK-WITH-AES-256-GCM-SHA384",
	"TLS-RSA-PSK-WITH-AES-128-CBC-SHA256",
	"TLS-RSA-PSK-WITH-AES-256-CBC-SHA384",
	"TLS-RSA-PSK-WITH-CAMELLIA-128-CBC-SHA256",
	"TLS-RSA-PSK-WITH-CAMELLIA-256-CBC-SHA384",
	"TLS-RSA-PSK-WITH-CAMELLIA-128-GCM-SHA256",
	"TLS-RSA-PSK-WITH-CAMELLIA-256-GCM-SHA384",
	"TLS-RSA-PSK-WITH-3DES-EDE-CBC-SHA",
	"TLS-RSA-PSK-WITH-RC4-128-SHA",
	"TLS-RSA-PSK-WITH-NULL-SHA",
	"TLS-RSA-PSK-WITH-NULL-SHA256",
	"TLS-RSA-PSK-WITH-NULL-SHA384"
      };
